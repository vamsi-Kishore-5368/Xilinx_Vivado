Design Part :


`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 01.06.2025 16:19:24
// Design Name: 
// Module Name: HALF_ADD
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////

module HALF_ADD (
    input A,       // First input bit
    input B,       // Second input bit
    output Sum,    // Sum output
    output Carry   // Carry output
);

    assign Sum = A ^ B;       // XOR for Sum
    assign Carry = A & B;     // AND for Carry

endmodule





Testbench Part : 


`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 01.06.2025 16:25:58
// Design Name: 
// Module Name: half_adder_test
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module half_adder_test;
    reg A;
    reg B;
    wire Sum;
    wire Carry;
    HALF_ADD A1(.A(A),.B(B),.Sum(Sum),.Carry(Carry));
    initial begin
        A = 0; B = 0;
        #10 A = 0; B = 1;
        #10 A = 1; B = 0;
        #10 A = 1; B = 1;
        #10 $stop;
    end
endmodule


